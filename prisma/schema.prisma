// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma/client"
}

enum USERROLE {
  ADMIN
  USER
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime? @map("email_verified")
  image         String?
  password      String?
  role          USERROLE  @default(USER)
  accounts      Account[]

  @@map("users")
}

model Account {
  id                String  @id @default(cuid())
  userId            String  @map("user_id")
  type              String
  provider          String
  providerAccountId String  @map("provider_account_id")
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

enum STATUS {
  PENDING
  COMPLETED
  INPROGRESS
}

enum PRIORITY {
  HIGH
  MEDIUM
  LOW
}

model Case {
  id              String   @id @default(uuid())
  title           String
  status          STATUS   @default(INPROGRESS)
  assetsToRecover Int
  totalValue      Int
  lastKnownValue  Int
  recoveryMethods Int
  createdDate     DateTime
  lastUpdated     DateTime
  priority        PRIORITY @default(HIGH)

  recoveryAssets RecoveryAsset[]
}

enum WALLET_TYPE {
  Hardware_Wallet
  MetaMask
  Phantom_Wallet
}

enum ASSET_STATUS {
  Inaccessible
  Lost_Access
  Forgotten_Password
}

enum RECOVERY_METHOD {
  Seed_Phrase
  Private_Key
  Security_Questions
}

model RecoveryAsset {
  id            String       @id @default(cuid())
  case_id       String
  case          Case         @relation(fields: [case_id], references: [id])
  asset         String
  symbol        String
  amount        Int
  currentValue  Int
  lastKnowPrice Int
  wallet        WALLET_TYPE  @default(MetaMask)
  lastAccessed  DateTime
  status        ASSET_STATUS @default(Inaccessible)
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
